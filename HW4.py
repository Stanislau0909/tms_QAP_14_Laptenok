# РАБОТА С ПЕРЕМЕННЫМИ:

# 1 Переменной var_int присвойте значение 10, var_float - значение 8.4, var_str - "No".
var_int = 10
var_float = 8.4
var_str = "No"
# 2 Измените значение, хранимое в переменной var_int, увеличив его в 3.5 раза,
# результат свяжите с переменной big_int.

big_int = var_int * 3.5
print(int(big_int))

# 3 Измените значение, хранимое в переменной var_float, уменьшив его на единицу,
# результат свяжите с той же переменной.
var_float -= 1
print(var_float)

# 4 Разделите var_int на var_float, а затем big_int на var_float. Результат данных
# выражений не привязывайте ни к каким переменным.
print(var_int / var_float , '  ,  ' ,  big_int/var_float)

# 5 Измените значение переменной var_str на "NoNoYesYesYes". При формировании
# нового значения используйте операции конкатенации (+) и повторения строки (*).
var_str += "No" +("Yes" * 3)
print(var_str)
# 6 Выведите значения всех переменных.
print(big_int  ,var_float  , var_str )

# Строки:
# 1 Свяжите переменную с любой строкой, состоящей не менее чем из 8 символов.
# Извлеките из строки первый символ, затем последний, третий с начала и третий с
# конца. Измерьте длину вашей строки.
a = "qwerty123"
a = a[0]+a[8]+a[2]+a[-3]
print(a)
# 2 Присвойте произвольную строку длиной 10-15 символов переменной и извлеките из
# нее следующие срезы:
# первые восемь символов
# четыре символа из центра строки
# символы с индексами кратными трем
# переверните строку
abc =  "Hello world and people "
def somliter(abc):
    print(abc)
somliter(abc[0:8])
somliter(abc[6:-13])
somliter(abc[0:23:3])
somliter(abc[::-1])
# 3 Есть строка: “my name is name”. Напечатайте ее, но вместо 2ого “name” вставьте
# ваше имя.
name = "my name is name"
name = name[0:10] + " Stas"
print(name)
# 4 Есть строка: test_tring = "Hello world!", необходимо
test_tring = "Hello world!"
# напечатать на каком месте находится буква w
iter = 0
for i in test_tring:
    iter += 1
    if i == 'w':
        break
print(iter)

# кол-во букв l
test_tring = "hello world"
count = 0
for i in test_tring:
  if i == "l":
    count += 1
print(count)
# Проверить начинается ли строка с подстроки: “Hello”
if test_tring.startswith("hello"):
    print("Начинается с  'hello'")
else:
    print("Не начинается с 'Hello'")
# Проверить заканчивается ли строка подстрокой: “qwe”
if test_tring.endswith("qwe"):
    print("Ваша строка заканчивается на QWE")
else:
    print("Ваша строка не заканчивается на QWE")


# СПИСКИ:

# 1 Создайте два любых списка и свяжите их с переменными.
jack =  [3, 5, 6, 7, 5, 3, 5, 7, 8, 5]
pot = [2, 4, 5, 7, 5, 12, 123, 432, 435]
# 2 Извлеките из первого списка второй элемент.
print(jack[1])
# 3 Измените во втором списке последний элемент. Выведите список на экран.
pot[-1] = "Я зменился"
print(pot)
# 4 Соедините оба списка в один, присвоив результат новой переменной. Выведите
# получившийся список на экран.
black = jack + pot
print(black)
# 5 "Снимите" срез из соединенного списка так, чтобы туда попали некоторые части
# обоих первых списков. Срез свяжите с очередной новой переменной. Выведите
# значение этой переменной.
srez = jack[0:2] + pot[0:2]
print(srez)
# 6 Добавьте в список два новых элемента и снова выведите его.
srez[4:5] = 23,25
print(srez)
# 7 Даны списки:
a = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]
# Нужно вернуть список, который состоит из элементов, общих для этих двух
# списков. -- !не использовать циклы
# c = []
# for i in b:
#     for j in a:
#         if i == j:
#             c.append(i)
#             break
# print(c)
d_ser = list(set(a) & set(b))
print(d_ser)
# 8 Есть список:
vv = [1, 2, 3, 4, 3, 2, 5, 1, 4, 6, 7, 1, 8, 2, 3]
# оставить в нем только уникальные
# значения. !не использовать циклы
vvv = list(set(vv))
print(vvv)

# ЛОГИЧЕСКИЕ ОПЕРАЦИИ:
# 1 Присвойте двум переменным любые числовые значения
num = 12
num2 = 15
# 2 Составьте четыре сложных логических выражения с помощью оператора and, два из
# которых должны давать истину, а два других - ложь.
str1 = "somethink"
var = True
exp = 0
exp1 = False
if str1 and  var :
    print("Оба значение True")

if str1 != var   and var != str1   :
 print("Оба значение не ровняются друг другу и это True")

if str1 == var and var != str1 :
    print("Ничего не выведется потому что выражние является False")

if exp and exp1 :
    print("Ничего не выведется потому что выражние является False")
# 3 Аналогично выполните п. 2, но уже используя оператор or.
if exp or var :
    print("Значит одно из значений True")
if exp == exp1 or exp :
    print("Одно из является True")
if var == False or exp == True  :
    print("both False")
if exp == 0 or exp == 1 :
    print("False")
# 4 Попробуйте использовать в сложных логических выражениях работу с переменными
# строкового типа.
string = "Some words"
string1 =  "What's wrong "
if string !=string1  or string1 == 0 :
    print("Выражение с переменными строкового типа и одна из является True")

# Словари:
# 1 Создайте словарь, связав его с переменной school, и наполните его данными,
# которые бы отражали количество учащихся в десяти разных классах (например, 1а, 1б,
# 2б, 6а, 7в и т.д.).
school = {'1a':40, '2b':35, '6a':32, '7v':41}
# 2 Узнайте сколько человек в каком-нибудь классе.
print(school['1a'])
print(school['2b'])
print(school['6a'])
print(school['7v'])
# 3 Представьте, что в школе произошли изменения, внесите их в словарь:
# ◦ в трех классах изменилось количество учащихся;
school['1a'] = 45
school['2b'] = 30
school['6a'] = 35
# ◦ в школе появилось два новых класса;
school['9a'] = 38
school['10a'] = 25
# ◦ в школе расформировали один из классов.
del school['6a']
# 4 Выведите содержимое словаря на экран.
print(school.keys())
for i in school.keys():
    print(i , school[i])

# Преобразование типов
# 1
# Перевести строку в массив
# "Robin Singh" => ["Robin”, “Singh"]
x = "Robin Sign"
x = x.split()
# "I love arrays they are my favorite" => ["I", "love", "arrays", "they", "are", "my", "favorite"]
xx = "I love arrays they are my favorite"
xx =xx.split()
# 2
# Дан список: [‘Ivan’, ‘Ivanou’], и 2 строки: Minsk, Belarus
# Напечатайте текст: “Привет, Ivan Ivanou! Добро пожаловать в Minsk Belarus”
somelist = ['Ivan', 'Ivanou']
city = "Minsk"
country = "Belarus"
print("Привет"," ".join(somelist),"Добро пожаловать в","",city ,"",country )
# 3
# Дан список ["I", "love", "arrays", "they", "are", "my", "favorite"] сделайте из него
# строку => "I love arrays they are my favorite"
firstList = ["I", "love", "arrays", "they", "are", "my", "favorite"]
firstList =(" ".join(firstList))
print(firstList)
# 4
# Создайте список из 10 элементов, вставьте на 3-ю позицию новое значение,
# удалите элемент из списка под индексом 6
secondList = [1,2,3,4,5,6,7,8,9,10,11]
secondList[2] = 25
del secondList[6]
print(secondList)
# 5
# Есть 2 словаря
a = { 'a': 1, 'b': 2, 'c': 3}
b = { 'c': 3, 'd': 4,'e': 5}
# Необходимо их объединить по ключам, а значения ключей поместить в список, если у
# одного словаря есть ключ "а", а у другого нету, то поставить значение None на
# соответствующую позицию(1-я позиция для 1-ого словаря, вторая для 2-ого)
# ab = {'a': [1, None], 'b': [2, None], 'c': [3, 3], 'd': [None, 4], 'e': [None, 5]}
# for k,v in b.items():
#     a[k] = v
ab = {}
for key in list(a.keys()) + list(b.keys()):
    ab[key] = [a.get(key), b.get(key)]
print(ab)




# *1) Вам передан массив чисел. Известно, что каждое число в этом массиве имеет пару,
# кроме одного: [1, 5, 2, 9, 2, 9, 1] => 5
# Напишите программу, которая будет выводить уникальное число
#
# *2) Дан текст, который содержит различные английские буквы и знаки препинания. Вам
# необходимо найти самую частую букву в тексте. Результатом должна быть буква в
# нижнем регистре.
# При поиске самой частой буквы, регистр не имеет значения, так что при подсчете
# считайте, что "A" == "a". Убедитесь, что вы не считайте знаки препинания, цифры и
# пробелы, а только буквы.
# Если в тексте две и больше буквы с одинаковой частотой, тогда результатом будет
# буква, которая идет первой в алфавите. Для примера, "one" содержит "o", "n", "e" по
# одному разу, так что мы выбираем "e".
# "a-z" == "a"
# "Hello World!" == "l"
# "How do you do?" == "o"
# "One" == "e"
# "Oops!" == "o"
# "AAaooo!!!!" == "a"
# "a" * 9000 + "b" * 1000 == "a"


# УСЛОВИЯ
# 1
# Дано целое число. Если оно является положительным, то прибавить к нему 1; в
# противном случае не изменять его. Вывести полученное число.
number = int(input(">>>"))
if number > 0:
    number += 1
    print(number)
else:
    print(number)
# 2
# Даны три целых числа. Найти количество положительных чисел в исходном
# наборе.
v = int(input("Ввести первое число "))
v1 = int(input("Ввести второе число "))
v2 = int(input("Ввести третье число "))
summ = 0
if v > 0:
    summ += 1
if v1 > 0:
    summ += 1
if v2 > 0:
    summ += 1
print("Кол-во положительных чисел" , summ)
# 3
# Дан номер года (положительное целое число). Определить количество дней в
# этом году, учитывая, что обычный год насчитывает 365 дней, а високосный — 366
# дней. Високосным считается год, делящийся на 4, за исключением тех годов, которые
# делятся на 100 и не делятся на 400 (например, годы 300, 1300 и 1900 не являются
# високосными, а 1200 и 2000 являются).
year = int(input("номер года пололжительный "))
usual_year = 365
unusual_year = 366
if year / 4 :
    print(unusual_year)
if year / 100 :
    print(usual_year)


# 4
# Дано целое число в диапазоне 1–7. Вывести строку — название дня недели,
# соответствующее данному числу (1 — «понедельник», 2 — «втор- ник» и т. д.).
rfc = int(input("Введите число "))
if rfc == 1:
    print("monday")
elif rfc== 2:
    print("tuesday")
elif rfc== 3:
    print("wednesday")
elif rfc== 4:
    print("thursday")
elif rfc== 5:
    print("friday")
elif rfc== 6:
    print("saturday")
elif rfc== 7:
    print("sunday")
else:
    print("Такого дня недели не существует!!!")

# 5
# Единицы массы пронумерованы следующим образом: 1 — килограмм, 2 —
# миллиграмм, 3 — грамм, 4 — тонна, 5 — центнер. Дан номер едини- цы массы (целое
# число в диапазоне 1–5) и масса тела в этих единицах (вещественное число). Найти
# массу тела в килограммах.
num_m = [1,2,3,4,5]
massa = int(input("Введите единицы массы >>> "))
count = int(input("Введите число для расчёта "))
if massa == 1:
    print("Расчёт произвёлся из кг в кг ")
    massa = count * 1
    print(massa)
elif massa == 2:
    print("Расчёт произвёлся из милиграмма в кг ")
    massa = count // 1000000
    print(massa)
elif massa == 3:
    print("Расчёт произвёлся из грамм в кг ")
    massa = count  // 1000
    print(massa)
elif massa == 4:
    print("Расчёт произвёлся из тонны в кг ")
    massa = count  * 1000
    print(massa)
elif massa == 5:
    print("Расчёт произвёлся из центнера в кг ")
    massa = count  * 100
    print(massa)
elif massa not in num_m:
    print("Ваш номер отсутсвует в нашей системе")


# Цикл for
# 1
# Даны два целых числа A и B (A < B). Найти сумму всех целых чисел от A до B
# включительно.
a = 1
b = 100
c = 0

for i in range(a, b + 1):
    c += i
print(c)
# 2
# Найти сумму всех натуральных чисел в от A до B
s = sum([i for i in range(a,b +1)])
print(s)
# 3
# Найти произведение положительных, сумму и количество отрицательных
# из 10 введенных целых значений.
value1 = []
for i in range(10):
      value = int(input("Введите 10 сука положительных и блеачь отрицательных сука тоже чисел блеать >> "))
      value1.append(value)

a = 1
b = 0
c = 0
for value in value1:
      if value > 0:
            a *= value
      elif value<0:
            b +=value
            c +=1
print("Расчёт произведение положительных чисел ",a)
print("Расчёт отрицательных чисел ",b)
print("Кол-во отрицательных чисел ",c)

# 4
# Дан словарь пловцов с их результатами. Напечатать лучший результат
# заплыва среди 6 участников.
# Бекиш Александр - 21,07
# Будник Алексей - 20,34
# Гребень Анастасия - 22,12
# Давидович Татьяна - 30
# Дешук Дмитрий - 24.01
# Казак Анна - 28,17
swimming_pool = {"Бекиш Александр":"21,07",
                 "Будник Алексей":"20,34",
                 "Гребень Анастасия":"22,12",
                 "Давидович Татьяна":"30",
                 "Дешук Дмитрий":"24.01",
                 "Казак Анна":"28,17"
                 }
max_result = max(swimming_pool.values())
print(max_result)

# 5
# Есть массив чисел. Известно, что каждое число в этом массиве имеет пару,
# кроме одного: [1, 5, 2, 9, 2, 9, 1] => 5 Напишите программу, которая будет выводить
# уникальное число
unicnum = [1, 5, 2, 9, 2, 9, 1]
for i in unicnum:
    if unicnum.count(i) == 1:
        print(i)


# Цикл while
# 1
# Дано число N. Найти произведение всех чисел от 0 до N.
n = 5
result = 1
i = 1
while i <= n:
    result *= i
    i += 1
print(result)


# 2
# Поле засеяли цветами двух сортов на площади S1 и S2. Каждый год
# площадь цветов первого сорта увеличивается вдвое, а площадь второго сорта
# увеличивается втрое. Через сколько лет площадь первых сортов будет
# составлять меньше 10% от площади вторых сортов.
s1 = 50
s2 = 200
years = 0

while s1 >= s2 * 0.1:
    s1 *= 2
    s2 *= 3
    years += 1

print(f"Через {years} лет площадь первых сортов будет составлять меньше 10% от площади вторых сортов.")

# 3
# Дано целое число N (>0). Используя операции деления нацело и взятия
# остатка от деления, найти количество и сумму его цифр.
n = int(input("Введите целое число: "))
sum = 0
while n > 0:
    sum += n % 10
    n //= 10
print("Количество цифр:", len(str(n)))
print("Сумма цифр:", sum)

# 4
# Деду M лет, а внуку N лет. Через сколько лет дед станет вдвое старше
# внука. И сколько при этом лет будет деду и внуку.

M = int(input("Введите возраст деда: "))
N = int(input("Введите возраст внука: "))

x = M - 2 * N

if x >= 0:

    print(f"Через {x} лет дед станет вдвое старше внука.")
    print(f"Деду будет {M + x} лет, а внуку {N + x} лет.")
else:

    print("Такого не может быть!")
